//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.image` struct is generated, and contains static references to 21 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `LaunchImage`.
    var launchImage: RswiftResources.ImageResource { .init(name: "LaunchImage", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `ad_mute`.
    var ad_mute: RswiftResources.ImageResource { .init(name: "ad_mute", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ad_resource`.
    var ad_resource: RswiftResources.ImageResource { .init(name: "ad_resource", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ad_restore`.
    var ad_restore: RswiftResources.ImageResource { .init(name: "ad_restore", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `localAnimation.gif`.
    var localAnimationGif: RswiftResources.ImageResource { .init(name: "localAnimation.gif", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `photo_arrow_down`.
    var photo_arrow_down: RswiftResources.ImageResource { .init(name: "photo_arrow_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photo_arrow_up`.
    var photo_arrow_up: RswiftResources.ImageResource { .init(name: "photo_arrow_up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photo_guide_normal`.
    var photo_guide_normal: RswiftResources.ImageResource { .init(name: "photo_guide_normal", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photo_guide_seleted`.
    var photo_guide_seleted: RswiftResources.ImageResource { .init(name: "photo_guide_seleted", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toast_fail`.
    var toast_fail: RswiftResources.ImageResource { .init(name: "toast_fail", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toast_success`.
    var toast_success: RswiftResources.ImageResource { .init(name: "toast_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user_guide01`.
    var user_guide01: RswiftResources.ImageResource { .init(name: "user_guide01", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user_guide02`.
    var user_guide02: RswiftResources.ImageResource { .init(name: "user_guide02", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user_guide03`.
    var user_guide03: RswiftResources.ImageResource { .init(name: "user_guide03", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user_guide04`.
    var user_guide04: RswiftResources.ImageResource { .init(name: "user_guide04", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_back_black`.
    var vc_back_black: RswiftResources.ImageResource { .init(name: "vc_back_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_back_white`.
    var vc_back_white: RswiftResources.ImageResource { .init(name: "vc_back_white", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_home`.
    var vc_home: RswiftResources.ImageResource { .init(name: "vc_home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_list`.
    var vc_list: RswiftResources.ImageResource { .init(name: "vc_list", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_task`.
    var vc_task: RswiftResources.ImageResource { .init(name: "vc_task", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vc_user`.
    var vc_user: RswiftResources.ImageResource { .init(name: "vc_user", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 3 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `LaunchImage.png`.
    var launchImagePng: RswiftResources.FileResource { .init(name: "LaunchImage", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `localAnimation.gif`.
    var localAnimationGif: RswiftResources.FileResource { .init(name: "localAnimation", pathExtension: "gif", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `localVideo.mp4`.
    var localVideoMp4: RswiftResources.FileResource { .init(name: "localVideo", pathExtension: "mp4", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "LaunchImage.png", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'LaunchImage.png' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
  }
}